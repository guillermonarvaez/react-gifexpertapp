{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAkB5C,OACI,mCACI,sBAAMC,SAbM,SAACC,GACrBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAQ,MAAM,CAAEP,GAAR,mBAAsBO,OAC7CN,EAAc,MAOV,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SArBa,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,eA2B3BZ,EAAYe,WAAa,CACrBd,c,OAAgBe,EAAUC,KAAKC,Y,mCClCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCCRO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAU,yCAAf,UAEI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAK,GACLe,SAAU,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA2BtC,OApBAC,qBAAW,WAEP1B,EAAQC,GACH0B,MAAK,SAAAC,GAGEX,QAAQC,IAAIU,GACZH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAO1B,CAACtB,IAIIuB,EDxBwBK,CAAa5B,GAAhCa,EAFwB,EAE7BN,KAAYe,EAFiB,EAEjBA,QACnB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQL,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADEA,EAAIC,aEXtBkB,EAAgB,WAAI,MAEO/C,mBAAS,CAAC,cAFjB,mBAEtBgD,EAFsB,KAEVjD,EAFU,KAW7B,OADAmC,QAAQC,IAAIa,GAEJ,qCACA,8CACA,cAAC,EAAD,CAAajD,cAAkBA,IAC/B,uBAEA,6BAEIiD,EAAWrB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCrB3B+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.26380186.chunk.js","sourcesContent":["import React ,{useState}from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n   const [inputValue, setInputValue] = useState(\"\");\n\n   const handleInputChange = (e)=>{\n    setInputValue(e.target.value)\n   }\n\n   const handleSubmit = (e) =>{\n    e.preventDefault();\n    \n\n    if(inputValue.trim().length > 2){\n        setCategories((cats)=>{return [inputValue,...cats]});\n        setInputValue(\"\");\n    }\n\n   }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategory.prototypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","\nexport const  getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nsKdqDCeUPzAjYiUPsqYzDcjrnahh3Nc`;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title : img.title,\n            url : img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    console.log({id,title,url})\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            {/* {img.tittle}   */}\n            <img src={url} alt={title}></img>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GiftGrid = ({category}) => {\n\n    const {data:images,loading}  = useFetchGifs(category);\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n        <div className=\"card-grid\" >\n\n            { \n                images.map((img) =>(\n                    <GifGridItem \n                        key = {img.id}\n                        { ...img } \n                    />                   \n                ))\n            }           \n            \n        </div>\n        </>\n    )\n}\n","import {useState,useEffect} from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    \n    const [state, setState] = useState({\n        data:[],\n        loading : true\n    });\n\n    useEffect( ()=>{\n\n        getGifs(category)\n            .then(imgs =>{\n\n                //setTimeout( ()=>{\n                    console.log(imgs)\n                    setState({\n                        data:imgs,\n                        loading:false\n                    });\n                //},3000)\n\n               \n            })\n\n    },[category])\n    \n   \n\n    return state; // {data:[],loading:true}\n}\n","import React ,{useState} from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GiftGrid } from \"./components/GiftGrid\";\n\n\nexport const GiftExpertApp = ()=>{\n    // const categories = [\"One Punch\",\"Samurai X\",\"Dragon Ball\"];\n    const [categories, setCategories] = useState([\"One Punch\"])\n    // const handleAdd = ()=>{\n    //     //setCategories([\"HunterXHunter\",...categories])\n    //     setCategories((cats)=>{\n    //         return [...cats,\"HunterXHunter\"]\n    //     })\n    //     console.log(categories)\n    // }\n    console.log(categories)\n    return (\n            <>\n            <h2>GiftExperApp</h2>\n            <AddCategory setCategories = { setCategories } />\n            <hr></hr>\n           \n            <ol>\n                { \n                categories.map((category)=>(\n                    <GiftGrid \n                    key = {category}\n                    category= { category} />\n                    ))\n                }\n            </ol>\n            </>\n        );\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GiftExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}